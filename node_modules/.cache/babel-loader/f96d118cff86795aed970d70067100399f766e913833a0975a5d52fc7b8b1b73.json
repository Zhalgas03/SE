{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\falco\\\\Desktop\\\\SE Project\\\\frontend\\\\src\\\\components\\\\Register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [form, setForm] = useState({\n    username: '',\n    email: '',\n    password: ''\n  });\n  const [message, setMessage] = useState('');\n  const validateEmail = email => /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const {\n      username,\n      email,\n      password\n    } = form;\n    if (!username || !email || !password) {\n      setMessage(\"Все поля обязательны\");\n      return;\n    }\n    if (!validateEmail(email)) {\n      setMessage(\"Некорректный email\");\n      return;\n    }\n    if (password.length < 6) {\n      setMessage(\"Пароль должен быть не менее 6 символов\");\n      return;\n    }\n    try {\n      const res = await axios.post('http://localhost:5000/api/register', form);\n      setMessage(res.data.message);\n    } catch (err) {\n      setMessage('Ошибка регистрации');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"username\",\n      placeholder: \"Username\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 79\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 86\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 95\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u0417\\u0430\\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Register, \"60D7R77fgJwy5jBWY/7u+o2ITNU=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Register","_s","form","setForm","username","email","password","message","setMessage","validateEmail","test","handleChange","e","target","name","value","handleSubmit","preventDefault","length","res","post","data","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","type","_c","$RefreshReg$"],"sources":["C:/Users/falco/Desktop/SE Project/frontend/src/components/Register.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction Register() {\r\n  const [form, setForm] = useState({ username: '', email: '', password: '' });\r\n  const [message, setMessage] = useState('');\r\n\r\n  const validateEmail = email =>\r\n    /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email);\r\n\r\n  const handleChange = e => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async e => {\r\n    e.preventDefault();\r\n    const { username, email, password } = form;\r\n\r\n    if (!username || !email || !password) {\r\n      setMessage(\"Все поля обязательны\");\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(email)) {\r\n      setMessage(\"Некорректный email\");\r\n      return;\r\n    }\r\n\r\n    if (password.length < 6) {\r\n      setMessage(\"Пароль должен быть не менее 6 символов\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/api/register', form);\r\n      setMessage(res.data.message);\r\n    } catch (err) {\r\n      setMessage('Ошибка регистрации');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <h2>Регистрация</h2>\r\n      <input name=\"username\" placeholder=\"Username\" onChange={handleChange} /><br />\r\n      <input name=\"email\" type=\"email\" placeholder=\"Email\" onChange={handleChange} /><br />\r\n      <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={handleChange} /><br />\r\n      <button type=\"submit\">Зарегистрироваться</button>\r\n      <p>{message}</p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}