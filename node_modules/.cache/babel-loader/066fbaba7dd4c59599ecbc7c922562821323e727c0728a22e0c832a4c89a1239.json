{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\falco\\\\Desktop\\\\SE Project\\\\frontend\\\\src\\\\pages\\\\PlannerPage.js\",\n  _s = $RefreshSig$();\n// frontend/src/pages/PlannerPage.jsx\nimport React, { useState } from 'react';\nimport ChatPanel from '../components/ChatPanel';\nimport TripVisualizer from '../components/TripVisualizer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sampleItinerary = [{\n  day: 1,\n  title: \"Arrival in Almaty\",\n  activity: \"Explore Almaty, enjoy local food\",\n  hotel: \"Almaty Comfort Hostel\",\n  weather: \"☀️ Sunny, 22°C\"\n}, {\n  day: 2,\n  title: \"Local Market & Museums\",\n  activity: \"Visit Green Market and museums\",\n  hotel: \"Hotel Kazakhstan\",\n  weather: \"⛅ Partly cloudy, 20°C\"\n}, {\n  day: 3,\n  title: \"Mountain Adventure\",\n  activity: \"Hiking in the Tian Shan mountains\",\n  hotel: \"Mountain Eco Lodge\",\n  weather: \"🌄 Clear, 18°C\"\n}];\nexport default function PlannerPage() {\n  _s();\n  const [messages, setMessages] = useState([{\n    id: 1,\n    from: 'bot',\n    text: \"👋 Hello! I'm your smart travel planner. Let's start step-by-step! Where would you like to go?\"\n  }]);\n  const [itinerary, setItinerary] = useState([]);\n  const sendMessage = text => {\n    // 1) добавляем сообщение пользователя\n    setMessages(msgs => [...msgs, {\n      id: msgs.length + 1,\n      from: 'user',\n      text\n    }]);\n\n    // 2) «симуляция» ответа бота\n    setTimeout(() => {\n      const l = text.toLowerCase();\n      if (l.includes('almaty')) {\n        setMessages(msgs => [...msgs, {\n          id: msgs.length + 1,\n          from: 'bot',\n          text: \"Great! When are you planning to travel?\"\n        }]);\n      } else if (/june|july|august/.test(l)) {\n        setMessages(msgs => [...msgs, {\n          id: msgs.length + 1,\n          from: 'bot',\n          text: \"What do you want to do there?\"\n        }]);\n      } else if (l.includes('explore')) {\n        setMessages(msgs => [...msgs, {\n          id: msgs.length + 1,\n          from: 'bot',\n          text: \"Noted. Your itinerary is ready!\"\n        }]);\n        setItinerary(sampleItinerary);\n      } else {\n        setMessages(msgs => [...msgs, {\n          id: msgs.length + 1,\n          from: 'bot',\n          text: \"Please specify your destination city.\"\n        }]);\n      }\n    }, 800);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex main-content\",\n    style: {\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 border-end p-3 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(ChatPanel, {\n        messages: messages,\n        onSend: sendMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-50 p-3 overflow-auto\",\n      children: /*#__PURE__*/_jsxDEV(TripVisualizer, {\n        itinerary: itinerary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(PlannerPage, \"B8xILT+4F0MD8XwBRaB2iGNGEbU=\");\n_c = PlannerPage;\nvar _c;\n$RefreshReg$(_c, \"PlannerPage\");","map":{"version":3,"names":["React","useState","ChatPanel","TripVisualizer","jsxDEV","_jsxDEV","sampleItinerary","day","title","activity","hotel","weather","PlannerPage","_s","messages","setMessages","id","from","text","itinerary","setItinerary","sendMessage","msgs","length","setTimeout","l","toLowerCase","includes","test","className","style","height","children","onSend","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/falco/Desktop/SE Project/frontend/src/pages/PlannerPage.js"],"sourcesContent":["// frontend/src/pages/PlannerPage.jsx\r\nimport React, { useState } from 'react';\r\nimport ChatPanel from '../components/ChatPanel';\r\nimport TripVisualizer from '../components/TripVisualizer';\r\n\r\nconst sampleItinerary = [\r\n  { day: 1, title: \"Arrival in Almaty\", activity: \"Explore Almaty, enjoy local food\", hotel: \"Almaty Comfort Hostel\", weather: \"☀️ Sunny, 22°C\" },\r\n  { day: 2, title: \"Local Market & Museums\", activity: \"Visit Green Market and museums\", hotel: \"Hotel Kazakhstan\", weather: \"⛅ Partly cloudy, 20°C\" },\r\n  { day: 3, title: \"Mountain Adventure\", activity: \"Hiking in the Tian Shan mountains\", hotel: \"Mountain Eco Lodge\", weather: \"🌄 Clear, 18°C\" }\r\n];\r\n\r\nexport default function PlannerPage() {\r\n  const [messages, setMessages] = useState([\r\n    { id: 1, from: 'bot', text: \"👋 Hello! I'm your smart travel planner. Let's start step-by-step! Where would you like to go?\" }\r\n  ]);\r\n  const [itinerary, setItinerary] = useState([]);\r\n\r\n  const sendMessage = text => {\r\n    // 1) добавляем сообщение пользователя\r\n    setMessages(msgs => [...msgs, { id: msgs.length + 1, from: 'user', text }]);\r\n\r\n    // 2) «симуляция» ответа бота\r\n    setTimeout(() => {\r\n      const l = text.toLowerCase();\r\n      if (l.includes('almaty')) {\r\n        setMessages(msgs => [...msgs, { id: msgs.length + 1, from: 'bot', text: \"Great! When are you planning to travel?\" }]);\r\n      } else if (/june|july|august/.test(l)) {\r\n        setMessages(msgs => [...msgs, { id: msgs.length + 1, from: 'bot', text: \"What do you want to do there?\" }]);\r\n      } else if (l.includes('explore')) {\r\n        setMessages(msgs => [...msgs, { id: msgs.length + 1, from: 'bot', text: \"Noted. Your itinerary is ready!\" }]);\r\n        setItinerary(sampleItinerary);\r\n      } else {\r\n        setMessages(msgs => [...msgs, { id: msgs.length + 1, from: 'bot', text: \"Please specify your destination city.\" }]);\r\n      }\r\n    }, 800);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex main-content\" style={{ height: '100vh' }}>\r\n      <div className=\"w-50 border-end p-3 overflow-auto\">\r\n        <ChatPanel messages={messages} onSend={sendMessage} />\r\n      </div>\r\n      <div className=\"w-50 p-3 overflow-auto\">\r\n        <TripVisualizer itinerary={itinerary} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}